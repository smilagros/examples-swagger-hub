/**
 * Services Orders API Swagger
 * These are the services for Services Orders
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.7
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ServicesOrdersApiSwagger);
  }
}(this, function(expect, ServicesOrdersApiSwagger) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ServicesOrdersApiSwagger.ServiceOrder();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ServiceOrder', function() {
    it('should create an instance of ServiceOrder', function() {
      // uncomment below and update the code to test ServiceOrder
      //var instance = new ServicesOrdersApiSwagger.ServiceOrder();
      //expect(instance).to.be.a(ServicesOrdersApiSwagger.ServiceOrder);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new ServicesOrdersApiSwagger.ServiceOrder();
      //expect(instance).to.be();
    });

    it('should have the property orderNumber (base name: "orderNumber")', function() {
      // uncomment below and update the code to test the property orderNumber
      //var instance = new ServicesOrdersApiSwagger.ServiceOrder();
      //expect(instance).to.be();
    });

    it('should have the property orderDate (base name: "orderDate")', function() {
      // uncomment below and update the code to test the property orderDate
      //var instance = new ServicesOrdersApiSwagger.ServiceOrder();
      //expect(instance).to.be();
    });

    it('should have the property endDate (base name: "endDate")', function() {
      // uncomment below and update the code to test the property endDate
      //var instance = new ServicesOrdersApiSwagger.ServiceOrder();
      //expect(instance).to.be();
    });

    it('should have the property area (base name: "area")', function() {
      // uncomment below and update the code to test the property area
      //var instance = new ServicesOrdersApiSwagger.ServiceOrder();
      //expect(instance).to.be();
    });

    it('should have the property supplier (base name: "supplier")', function() {
      // uncomment below and update the code to test the property supplier
      //var instance = new ServicesOrdersApiSwagger.ServiceOrder();
      //expect(instance).to.be();
    });

    it('should have the property requester (base name: "requester")', function() {
      // uncomment below and update the code to test the property requester
      //var instance = new ServicesOrdersApiSwagger.ServiceOrder();
      //expect(instance).to.be();
    });

    it('should have the property numberRequest (base name: "numberRequest")', function() {
      // uncomment below and update the code to test the property numberRequest
      //var instance = new ServicesOrdersApiSwagger.ServiceOrder();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instance = new ServicesOrdersApiSwagger.ServiceOrder();
      //expect(instance).to.be();
    });

    it('should have the property priceTotal (base name: "priceTotal")', function() {
      // uncomment below and update the code to test the property priceTotal
      //var instance = new ServicesOrdersApiSwagger.ServiceOrder();
      //expect(instance).to.be();
    });

    it('should have the property paymentMethod (base name: "paymentMethod")', function() {
      // uncomment below and update the code to test the property paymentMethod
      //var instance = new ServicesOrdersApiSwagger.ServiceOrder();
      //expect(instance).to.be();
    });

    it('should have the property reference (base name: "reference")', function() {
      // uncomment below and update the code to test the property reference
      //var instance = new ServicesOrdersApiSwagger.ServiceOrder();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new ServicesOrdersApiSwagger.ServiceOrder();
      //expect(instance).to.be();
    });

    it('should have the property complete (base name: "complete")', function() {
      // uncomment below and update the code to test the property complete
      //var instance = new ServicesOrdersApiSwagger.ServiceOrder();
      //expect(instance).to.be();
    });

  });

}));
